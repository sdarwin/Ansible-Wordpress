---
- name: apt update
  apt: update_cache=yes
  changed_when: false
  when: ansible_os_family == "Debian"

- name: install apache packages (Debian)
  apt:
    name: "{{ wordpress_packages_apache }}"
    state: present
  when: ansible_os_family == "Debian"

- name: install general packages (RHEL)
  yum:
    name: "{{ wordpress_packages_apache }}"
    state: present
    update_cache: true
  when: ansible_os_family == "RedHat"

- name: enabled mod_rewrite
  apache2_module: name={{ item }} state=present
  with_items:
    - rewrite
    - ssl
  notify:
    - restart apache
  when: ansible_os_family == "Debian"

- name: create apache sites-available
  file:
    path: "/etc/{{ wordpress_apache_service }}/sites-available"
    state: directory
    owner: root
    group: root
    mode: 0755

- name: create apache sites-enabled
  file:
    path: "/etc/{{ wordpress_apache_service }}/sites-enabled"
    state: directory
    owner: root
    group: root
    mode: 0755

- name: enable apache sites-enabled
  lineinfile: dest="/etc/{{ wordpress_apache_service }}/conf/httpd.conf" line="IncludeOptional sites-enabled/*.conf"
  when: ansible_os_family == 'RedHat'

- name: create deploy dir
  file: dest={{ wordpress_deploy_dir }} owner={{ wordpress_deploy_user }}  group={{ wordpress_deploy_group }} state=directory
  notify:
    - restart apache

- name: fix permissions on home dir
  file: dest={{ wordpress_deploy_user_home }} state=directory mode=755
  notify:
    - restart apache
  when: ansible_os_family == 'RedHat'

- name: create virtual host file
  template: src=web_app.conf.j2 dest=/etc/{{ wordpress_apache_service }}/sites-available/{{ wordpress_server_name }}.conf owner=root group=root
  notify:
    - restart apache

- name: enable site
  file:
    src: /etc/{{ wordpress_apache_service }}/sites-available/{{ wordpress_server_name }}.conf
    dest: /etc/{{ wordpress_apache_service }}/sites-enabled/{{ wordpress_server_name }}.conf
    owner: root
    group: root
    state: link
  notify:
    - restart apache

- name: remove default site
  file: dest=/etc/{{ wordpress_apache_service }}/sites-enabled/{{ item }} state=absent
  with_items:
    - default
    - 000-default.conf
    - 000-default
  notify:
    - restart apache

- name: Install latest passlib with pip
  pip: name=passlib

- name: Set htpasswd for gui users
  htpasswd:
    crypt_scheme: plaintext
    path: /etc/{{ wordpress_apache_service }}/htpasswd.{{ wordpress_server_name }}
    name: "{{ item.username }}"
    password: "{{ item.htpasswd }}"
    state: present
  with_items: "{{ wordpress_htusers | default([]) }}"
  changed_when: false

- name: create cert (Redhat)
  shell: "{{ make_dummy_cert_path }} {{ wordpress_ssl_cert }} ; chmod 640 {{ wordpress_ssl_cert }} ; chgrp {{ wordpress_users.web }} {{ wordpress_ssl_cert }}"
  args:
    creates: "{{ wordpress_ssl_cert }}"
  when: ansible_os_family == "RedHat"
  notify: restart apache

# This is necessary because the dummy cert also includes the private key, in the same exact file. Thus, the private key is missing.
- name: create key, part 1 (Redhat)
  file:
    path: /etc/ssl/private
    state: directory
    mode: '0710'
    owner: root
    group: "{{ wordpress_cert_group }}"
  when: ansible_os_family == "RedHat"

- name: create key, part2 (Redhat)
  copy:
    src: "{{ wordpress_ssl_cert }}"
    dest: "{{ wordpress_ssl_key }}"
    remote_src: true
    force: false
    mode: preserve
    owner: root
    group: "{{ wordpress_cert_group }}"
  when: ansible_os_family == "RedHat"
  notify: restart apache

- name: Check that /etc/selinux/config exists
  stat:
    path: /etc/selinux/config
  register: stat_result
  when:
    - ansible_os_family == "RedHat"

- name: put SELinux in permissive mode
  selinux:
    policy: targeted
    state: permissive
  when:
    - ansible_os_family == "RedHat"
    - stat_result.stat.exists
